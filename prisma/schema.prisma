generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String     @id @default(uuid())
  name      String
  userName  String     @unique
  email     String     @unique
  password  String
  role      UserRole   @default(USER)
  status    UserStatus @default(ACTIVE)
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  Post      Post[]

  @@map("users")
}

model Post {
  id          String   @id @default(uuid())
  title       String
  content     String
  thumbnailId String?  @unique
  authorId    String
  published   Boolean  @default(true)
  isDeleted   Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  author    User   @relation(fields: [authorId], references: [id])
  thumbnail Image? @relation(fields: [thumbnailId], references: [id])

  @@map("posts")
}

model Service {
  id          String   @id @default(uuid())
  title       String
  description String
  iconId      String   @unique
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  icon Image @relation(fields: [iconId], references: [id])

  @@map("services")
}

model Gallery {
  id        String   @id @default(uuid())
  imageId   String   @unique
  category  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  image Image @relation(fields: [imageId], references: [id])

  @@map("galleries")
}

model Image {
  id      String   @id @default(uuid())
  path    String
  cloudId String
  Post    Post?
  Service Service?
  Gallery Gallery?

  @@map("images")
}

enum UserRole {
  SUPER_ADMIN
  ADMIN
  USER
}

enum UserStatus {
  ACTIVE
  DELETED
  BLOCKED
}
